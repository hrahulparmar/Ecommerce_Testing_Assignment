<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-25T20:49:06 IST" name="Suite" finished-at="2025-06-25T20:50:29 IST" duration-ms="83034">
    <groups>
    </groups>
    <test started-at="2025-06-25T20:49:06 IST" name="Test" finished-at="2025-06-25T20:50:29 IST" duration-ms="83034">
      <class name="tests.UserRegistrationTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.UserRegistrationTest@3fc2959f]" started-at="2025-06-25T20:49:43 IST" name="setup" finished-at="2025-06-25T20:49:47 IST" duration-ms="4096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="userRegisterPositive(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:tests.UserRegistrationTest@3fc2959f]" started-at="2025-06-25T20:49:47 IST" name="userRegisterPositive" data-provider="provideUserData" finished-at="2025-06-25T20:50:07 IST" duration-ms="19354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[parmar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[rahul4@mail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[street address]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Cardiff]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Cardiff]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[122334]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[rahulparmar4]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[pass@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userRegisterPositive -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.UserRegistrationTest@3fc2959f]" started-at="2025-06-25T20:50:07 IST" name="tearDown" finished-at="2025-06-25T20:50:07 IST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.UserRegistrationTest -->
      <class name="tests.UserRegisterNegativeTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.UserRegisterNegativeTest@5aa9e4eb]" started-at="2025-06-25T20:50:07 IST" name="setup" finished-at="2025-06-25T20:50:12 IST" duration-ms="4766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="UserRegisterNegative(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:tests.UserRegisterNegativeTest@5aa9e4eb]" started-at="2025-06-25T20:50:12 IST" name="UserRegisterNegative" data-provider="provideUserData" finished-at="2025-06-25T20:50:29 IST" duration-ms="17333" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[parmar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[rahul4@mail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[street address]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Cardiff]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Cardiff]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[122334]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[rahulparmar4]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[pass@123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [CHECKOUT CONFIRMATION] but found [CREATE ACCOUNT]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [CHECKOUT CONFIRMATION] but found [CREATE ACCOUNT]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at tests.UserRegisterNegativeTest.UserRegisterNegative(UserRegisterNegativeTest.java:36)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserRegisterNegative -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.UserRegisterNegativeTest@5aa9e4eb]" started-at="2025-06-25T20:50:29 IST" name="tearDown" finished-at="2025-06-25T20:50:29 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.UserRegisterNegativeTest -->
      <class name="tests.ProductSelectionTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ProductSelectionTest@1f2586d6]" started-at="2025-06-25T20:49:13 IST" name="setup" finished-at="2025-06-25T20:49:17 IST" duration-ms="3702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="selectAddProductToCart()[pri:2, instance:tests.ProductSelectionTest@1f2586d6]" started-at="2025-06-25T20:49:17 IST" name="selectAddProductToCart" finished-at="2025-06-25T20:49:28 IST" duration-ms="10780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAddProductToCart -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ProductSelectionTest@1f2586d6]" started-at="2025-06-25T20:49:28 IST" name="tearDown" finished-at="2025-06-25T20:49:28 IST" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ProductSelectionTest -->
      <class name="tests.HomepageVerificationTest">
        <test-method is-config="true" signature="startReport()[pri:0, instance:tests.HomepageVerificationTest@6150c3ec]" started-at="2025-06-25T20:49:06 IST" name="startReport" finished-at="2025-06-25T20:49:06 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.HomepageVerificationTest@6150c3ec]" started-at="2025-06-25T20:49:06 IST" name="setup" finished-at="2025-06-25T20:49:11 IST" duration-ms="5055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="printAllCategory()[pri:1, instance:tests.HomepageVerificationTest@6150c3ec]" started-at="2025-06-25T20:49:11 IST" name="printAllCategory" finished-at="2025-06-25T20:49:13 IST" duration-ms="1749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printAllCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.HomepageVerificationTest@6150c3ec]" started-at="2025-06-25T20:49:13 IST" name="tearDown" finished-at="2025-06-25T20:49:13 IST" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.HomepageVerificationTest -->
      <class name="tests.CheckoutTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CheckoutTest@10683d9d]" started-at="2025-06-25T20:49:28 IST" name="setup" finished-at="2025-06-25T20:49:33 IST" duration-ms="4784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyCheckoutFlow()[pri:3, instance:tests.CheckoutTest@10683d9d]" started-at="2025-06-25T20:49:33 IST" name="verifyCheckoutFlow" finished-at="2025-06-25T20:49:43 IST" duration-ms="10033" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckoutFlow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CheckoutTest@10683d9d]" started-at="2025-06-25T20:49:43 IST" name="tearDown" finished-at="2025-06-25T20:49:43 IST" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CheckoutTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
